{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport semver from 'semver';\nimport isNil from 'lodash.isnil';\nimport { getVersionInfo } from \"./versionInfo\";\nimport * as providers from \"./providers\";\nimport { IVersionAndStoreUrl } from \"./providers/types\";\nimport { getLatestVersion, defaultOption as defaultOptionForLatestVersion } from \"./getLatestVersion\";\nvar DELIMITER = '.';\nfunction getVersionWithDepth(version, depth) {\n  var versionArray = null;\n  if (version.indexOf(DELIMITER) === -1) {\n    versionArray = [version];\n  } else {\n    versionArray = version.split(DELIMITER).slice(0, Math.min(depth, version.length));\n  }\n  return [].concat(_toConsumableArray(versionArray), _toConsumableArray([0, 0, 0].slice(0, 3 - versionArray.length))).join(DELIMITER);\n}\nexport default function needUpdate() {\n  return _needUpdate.apply(this, arguments);\n}\nfunction _needUpdate() {\n  _needUpdate = _asyncToGenerator(function* () {\n    var needUpdateOption = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var option = _objectSpread(_objectSpread({\n      currentVersion: null,\n      latestVersion: null,\n      depth: Infinity,\n      ignoreErrors: true\n    }, defaultOptionForLatestVersion), needUpdateOption);\n    try {\n      if (isNil(option.currentVersion)) {\n        option.currentVersion = getVersionInfo().getCurrentVersion();\n      }\n      var latestVersion;\n      var providerStoreUrl = '';\n      if (isNil(option.latestVersion)) {\n        if (option.provider.getVersion) {\n          var _yield$option$provide = yield option.provider.getVersion(option),\n            version = _yield$option$provide.version,\n            storeUrl = _yield$option$provide.storeUrl;\n          latestVersion = version;\n          providerStoreUrl = storeUrl;\n        }\n        if (providers[option.provider]) {\n          var _yield$providers$opti = yield providers[option.provider].getVersion(option),\n            _version = _yield$providers$opti.version,\n            _storeUrl = _yield$providers$opti.storeUrl;\n          latestVersion = _version;\n          providerStoreUrl = _storeUrl;\n        }\n        option.latestVersion = latestVersion || (yield getLatestVersion(option));\n      }\n      return checkIfUpdateNeeded(option.currentVersion, option.latestVersion, option, providerStoreUrl);\n    } catch (e) {\n      if (option.ignoreErrors) {\n        console.warn(e);\n      } else {\n        throw e;\n      }\n    }\n  });\n  return _needUpdate.apply(this, arguments);\n}\nfunction checkIfUpdateNeeded(currentVersion, latestVersion, option, providerStoreUrl) {\n  var currentVersionWithDepth = getVersionWithDepth(currentVersion, option.depth);\n  var latestVersionWithDepth = getVersionWithDepth(latestVersion, option.depth);\n  var response = {\n    isNeeded: semver.gt(latestVersionWithDepth, currentVersionWithDepth),\n    storeUrl: providerStoreUrl,\n    currentVersion: currentVersion,\n    latestVersion: latestVersion\n  };\n  return Promise.resolve(response);\n}","map":{"version":3,"names":["semver","isNil","getVersionInfo","providers","IVersionAndStoreUrl","getLatestVersion","defaultOption","defaultOptionForLatestVersion","DELIMITER","getVersionWithDepth","version","depth","versionArray","indexOf","split","slice","Math","min","length","concat","_toConsumableArray","join","needUpdate","_needUpdate","apply","arguments","_asyncToGenerator","needUpdateOption","undefined","option","_objectSpread","currentVersion","latestVersion","Infinity","ignoreErrors","getCurrentVersion","providerStoreUrl","provider","getVersion","_yield$option$provide","storeUrl","_yield$providers$opti","checkIfUpdateNeeded","e","console","warn","currentVersionWithDepth","latestVersionWithDepth","response","isNeeded","gt","Promise","resolve"],"sources":["C:/repos/reactnative/BarryCoach/BarryCoach/node_modules/react-native-version-check/src/needUpdate.js"],"sourcesContent":["// @flow\nimport semver from 'semver';\nimport isNil from 'lodash.isnil';\n\nimport { getVersionInfo } from './versionInfo';\nimport * as providers from './providers';\nimport { IVersionAndStoreUrl } from './providers/types';\nimport {\n  getLatestVersion,\n  defaultOption as defaultOptionForLatestVersion,\n} from './getLatestVersion';\n\nconst DELIMITER = '.';\n\nfunction getVersionWithDepth(version: string, depth: number): string {\n  let versionArray = null;\n  if (version.indexOf(DELIMITER) === -1) {\n    versionArray = [version];\n  } else {\n    versionArray = version\n      .split(DELIMITER)\n      .slice(0, Math.min(depth, version.length));\n  }\n  return [...versionArray, ...[0, 0, 0].slice(0, 3 - versionArray.length)].join(\n    DELIMITER\n  );\n}\n\nexport type NeedUpdateOption = {\n  currentVersion?: string,\n  latestVersion?: string,\n  depth?: number,\n  ignoreErrors?: boolean,\n};\n\nexport type NeedUpdateResult = {\n  isNeeded: boolean,\n  storeUrl: string,\n  currentVersion: string,\n  latestVersion: string,\n};\n\nexport default async function needUpdate(\n  needUpdateOption: ?NeedUpdateOption = {}\n): Promise<NeedUpdateResult> {\n  const option = {\n    currentVersion: null,\n    latestVersion: null,\n    depth: Infinity,\n    ignoreErrors: true,\n    ...defaultOptionForLatestVersion,\n    ...needUpdateOption,\n  };\n\n  try {\n    if (isNil(option.currentVersion)) {\n      option.currentVersion = getVersionInfo().getCurrentVersion();\n    }\n\n    let latestVersion;\n    let providerStoreUrl = '';\n\n    if (isNil(option.latestVersion)) {\n      if (option.provider.getVersion) {\n        const {\n          version,\n          storeUrl,\n        }: IVersionAndStoreUrl = await option.provider.getVersion(option);\n        latestVersion = version;\n        providerStoreUrl = storeUrl;\n      }\n\n      if (providers[option.provider]) {\n        const { version, storeUrl }: IVersionAndStoreUrl = await providers[\n          option.provider\n        ].getVersion(option);\n        latestVersion = version;\n        providerStoreUrl = storeUrl;\n      }\n\n      option.latestVersion = latestVersion || (await getLatestVersion(option));\n    }\n\n    return checkIfUpdateNeeded(\n      option.currentVersion,\n      option.latestVersion,\n      option,\n      providerStoreUrl\n    );\n  } catch (e) {\n    if (option.ignoreErrors) {\n      console.warn(e); // eslint-disable-line no-console\n    } else {\n      throw e;\n    }\n  }\n}\n\nfunction checkIfUpdateNeeded(\n  currentVersion,\n  latestVersion,\n  option,\n  providerStoreUrl\n) {\n  const currentVersionWithDepth = getVersionWithDepth(\n    currentVersion,\n    option.depth\n  );\n  const latestVersionWithDepth = getVersionWithDepth(\n    latestVersion,\n    option.depth\n  );\n\n  const response = {\n    isNeeded: semver.gt(latestVersionWithDepth, currentVersionWithDepth),\n    storeUrl: providerStoreUrl,\n    currentVersion,\n    latestVersion,\n  };\n\n  return Promise.resolve(response);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}